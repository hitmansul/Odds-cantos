import os
import pandas as pd
import streamlit as st

st.set_page_config(page_title="Comparador de Odds ‚Äì Escanteios", page_icon="üìä", layout="wide")
st.title("üìä Comparador de Odds ‚Äì Escanteios")
st.caption("Leitura de planilha p√∫blica (CSV) com cache compartilhado por 15s.")

# --- 1) L√™ a URL do Secrets (Streamlit Cloud: Settings ‚Üí Secrets) ---
def get_sheet_url() -> str:
    url = st.secrets.get("SHEET_CSV_URL", None) if hasattr(st, "secrets") else None
    return url or os.getenv("SHEET_CSV_URL", "")

SHEET_URL = get_sheet_url()

# --- 2) Fun√ß√£o cacheada para buscar a planilha (CSV) ---
@st.cache_data(ttl=15)
def read_sheet(csv_url: str) -> pd.DataFrame:
    if not csv_url:
        raise ValueError("SHEET_CSV_URL n√£o encontrado nos Secrets.")
    return pd.read_csv(csv_url)

# --- 3) Bot√£o de atualiza√ß√£o manual ---
if st.button("üîÑ Atualizar Odds agora"):
    read_sheet.clear()
    st.toast("Cache limpo. Recarregando dados‚Ä¶", icon="‚úÖ")

# --- 4) Carrega e exibe dados ---
try:
    df = read_sheet(SHEET_URL)

    if df.empty:
        st.warning("Nenhum dado encontrado na planilha (CSV vazio).")
    else:
        if "atualizado_em" in df.columns:
            ts = df["atualizado_em"].iloc[0]
            st.info(f"√öltima atualiza√ß√£o da planilha: **{ts}**")

        st.dataframe(df, use_container_width=True)
        st.caption("Obs.: ‚Äú‚Äî‚Äù pode indicar que a casa n√£o oferece aquele mercado no momento.")

except Exception as e:
    st.error(f"Erro ao carregar dados da planilha: {e}")
